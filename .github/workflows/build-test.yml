name: Build, Lint, and Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-lint-test:
    name: Build, Lint, and Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v3
      - name: Get Yarn version
        run: echo "YARN_VERSION=$(yarn --version)" >> $GITHUB_ENV
        id: yarn-version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Set Yarn version to 4.3.0
        run: yarn set version 4.3.0
      - name: Print Yarn version
        run: yarn --version
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        with:
          path: ~/.yarn/cache
          key: yarn-cache-${{ runner.os }}-${{ env.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --immutable
      - run: yarn allow-scripts
      - run: yarn build
      - run: yarn lint
      - run: yarn test
      - name: Validate RC changelog
        if: ${{ startsWith(github.head_ref, 'release/') }}
        run: yarn auto-changelog validate --rc
      - name: Validate changelog
        if: ${{ !startsWith(github.head_ref, 'release/') }}
        run: yarn auto-changelog validate
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty after building"
            exit 1
          fi
  all-jobs-pass:
    name: All jobs pass
    runs-on: ubuntu-20.04
    needs:
      - build-lint-test
    steps:
      - run: echo "Great success!"
